" Modeline and Notes {
" vim: set foldmarker={,} foldlevel=0 foldmethod=marker:
"
"    #######  ########  ######## ########         ##     ## #### ##     ##
"   ##     ## ##     ## ##          ##            ##     ##  ##  ###   ###
"          ## ##     ## ##          ##            ##     ##  ##  #### ####
"    #######  ########  ######      ##    ####### ##     ##  ##  ## ### ##
"   ##        ##   ##   ##          ##             ##   ##   ##  ##     ##
"   ##        ##    ##  ##          ##              ## ##    ##  ##     ##
"   ######### ##     ## ########    ##               ###    #### ##     ##
"
"   This is the personal .vimrc file of Ben Thouret.
"
" }
"
" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }

    " Setup Plugin Support {
    " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

" }

" Plugins {
    " Deps
        Plugin 'gmarik/vundle'
        Plugin 'MarcWeber/vim-addon-mw-utils'
        Plugin 'tomtom/tlib_vim'
        if executable('ag')
            Plugin 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Plugin 'mileszs/ack.vim'
        elseif executable('ack')
            Plugin 'mileszs/ack.vim'
        endif
    " Use local bundles if available {
        if filereadable(expand("~/.vimrc.bundles.local"))
            source ~/.vimrc.bundles.local
        endif
    " }

    " In your .vimrc.bundles.local file"
    " list only the plugin groups you will use
    if !exists('g:two_ret_bundle_groups')
        let g:two_ret_bundle_groups=['general', 'programming', 'ruby', 'javascript', 'html', 'misc', 'tmux', 'devops']
    endif

    " To override all the included bundles, put
    " g:override_two_ret_bundles = 1
    " in your .vimrc.bundles.local file"
    if !exists("g:override_two_ret_bundles")

    " General
        if count(g:two_ret_bundle_groups, 'general')
            Plugin 'alfredodeza/jacinto.vim'
            Plugin 'bling/vim-airline'
            Plugin 'flazz/vim-colorschemes'
            Plugin 'godlygeek/csapprox'
            Plugin 'kien/ctrlp.vim'
            Plugin 'tacahiroy/ctrlp-funky'
            Plugin 'matchit.zip'
            Plugin 'mbbill/undotree'
            Plugin 'regedarek/ZoomWin'
            Plugin 'roman/golden-ratio'
            Plugin 'sheerun/vim-polyglot'
            Plugin 'jiangmiao/auto-pairs'
            Plugin 'terryma/vim-multiple-cursors'
            Plugin 'tpope/vim-commentary'
            Plugin 'tpope/vim-surround'
            Plugin 'tpope/vim-vinegar'
            Plugin 'int3/vim-extradite'
        endif

    " General Programming
        if count(g:two_ret_bundle_groups, 'programming')
            Plugin 'tpope/vim-fugitive'
            if executable('ctags')
                Plugin 'majutsushi/tagbar'
            endif
            Plugin 'Shougo/neocomplete.vim.git'
            Plugin 'airblade/vim-gitgutter'
            Plugin 'christoomey/vim-tmux-navigator'
        endif

    " Javascript
        if count(g:two_ret_bundle_groups, 'javascript')
            Plugin 'elzr/vim-json'
        endif

    " HTML/HAML/CSS
        if count(g:two_ret_bundle_groups, 'html')
            Plugin 'tpope/vim-haml'
        endif

    " Ruby
        if count(g:two_ret_bundle_groups, 'ruby')
            Plugin 'tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
            Plugin 'tpope/vim-bundler'
            Plugin 'kana/vim-textobj-user'
        endif

    " Misc
        if count(g:two_ret_bundle_groups, 'misc')
            Plugin 'mattn/gist-vim'
            Plugin 'mattn/webapi-vim'
            Plugin 'godlygeek/tabular'
            Plugin 'plasticboy/vim-markdown'
        endif

    " TMUX
        if count(g:two_ret_bundle_groups, 'tmux')
            Plugin 'jgdavey/tslime.vim'
            Plugin 'jgdavey/vim-turbux'
        endif

    " Devops
        if count(g:two_ret_bundle_groups, 'devops')
            Plugin 'rodjek/vim-puppet'
        endif
    endif
" }

" General {
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
" }
"
